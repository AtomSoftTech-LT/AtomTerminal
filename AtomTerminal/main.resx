<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MyCTRLBOX.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGMAAAAYCAYAAADu3kOXAAABg2lDQ1BJQ0MgcHJvZmlsZQAAKM+VkUso
        RFEcxn/zEIkszEKyuIthZUpIstIQKVMaowwW7r1jhpp7TfeObCyVrbLw2HgtbKzZWtgqpTxKVpZWxEa6
        /ueOmkmNcup0fn3nfF/nfAeCB3nTcsNdYNlFJzka16bTM1rtMyHaCNPBgG66hcTkSIqq4+OWgFpvYiqL
        /43GzIJrQkATHjQLTlF4XrhvtVhQvCMcMRf1jPCpcKcjFxS+V7pR4hfFOZ+DKjPipJJDwhFhLVfBRgWb
        i44l3CsczVi25AenS5xRvKbYyq+YP/dUL2xYsKcmlS6zjVHGSDCBhsEKS+QpEpPVFsUlKfvxKv5W3z8h
        LkNcS5jiGGYZC933o/7gd7dutqe7lNQQh5onz3trh9ot+Nr0vM9Dz/s6gtAjXNhl//IB9L+LvlnWovvQ
        tA5nl2XN2IbzDWh5KOiO7kshmcFsFl5P5JvS0HwN9bOl3n72Ob6DlHQ1fgW7e9CRk+y5Ku+uq+ztzzN+
        f8S/AdFDcs1fCjPDAAAACXBIWXMAAC4jAAAuIwF4pT92AAAAB3RJTUUH5AMcBQkqENzRtwAAABl0RVh0
        Q29tbWVudABDcmVhdGVkIHdpdGggR0lNUFeBDhcAAADaSURBVGhD7ZRRCoNAEEN7EK29Tg/g/Y9iEQyE
        YXYn/SlTzMf7cDcRzAMf67odpgeW0QjLuFiWZ3r+SyyjEbeX8XrvMlmfUXKzjGVc4yhkfabKVveWMRkH
        KBmAbMyPzhnLKAY6UTIM8ujE5xGWIYykZCLoMFmOsQxhKHXMCHpq1zKEsb4ZFKDDZDnGMoSh1DEB8ujE
        5xF/KYM/riLrM0pOfdcJsjE/OmcsI+mMyPpMla3u/ZuigSqyPqPkZpnby+iEZTTCMhphGY2wjEZYRiMs
        oxGW0QjLaMN2fAAuD7UFwKEyYgAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="MySerialPort.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="colorDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>137, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAGACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRuioqSioqSioqSioqR3dngaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRssKi2T
        k5Rzc3U9Oz4aFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRtpaWuZmZudnZ9/foAi
        HyN4eHmgoKFLSkxmZmiioqRgX2NLSkyioqR5eXsaFRsaFRsaFRtLSkyioqR5eXsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsgHCFbWluBgYKbm52OjpBram0yLzIaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRtIR0ihoaN1dHZTUlOioqRtbW8hHSGQj5GVlZednZ+BgIIaFRtLSkyioqR5eXsaFRsaFRsa
        FRtLSkyioqR5eXsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsoJSh8fH2h
        oaOCgYMaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRtxcXOioqROTU4aFRucnJ6Li4waFRtOTU6ioqSf
        n6EtKi0dGBxMS0yioqR6eXsbFhsaFRsaFRtLSkyioqR5eXsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsgHCFaWV2CgYOcnJ6OjpFqaWwzMTQaFRsaFRsbFxseGRwhHB0hHB0hHB0fGhwdGBx6enyi
        oqREQkcaFRuZmZuUlJUaFRuJiYyZmZufn6F3dnclIB5PTk2ioqSioqSioqSioqRUU1VLSkyioqSioqSi
        oqSioqRUU1UaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRssKi2Tk5VycnQ9Oz4aFRsaFRsaFRsaFRsbFhsg
        HB0nIh8sJyAtKCAsJyApJB8kHx5ycXSioqROTU4aFRucnJ6Li4xubXChoaNYV1lzcnOhoaNbWVdTUE2i
        oqR8e3ssKCAlIB4cFhxLSkyioqR5eXsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRseGRwoJB8vKiExLCExLCExLCEwKyEuKSBNS0ihoaN2dnZTUlOioqRt
        bG4eGRwmIR4uKSAwKyExLCExLCFTUU2ioqR8e3sxLCEqJSAhHB1LSkyioqR5eXsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRscFxsmIR4uKSAxLCEvKiErJiAs
        JyAvKiExLCEwKyFta2qZmZqdnZ99fYAoJSYnIh4tKSAxLCEwKyEsJyAoJB9PTkyioqSioqSioqSioqRu
        bW1LSkyioqSioqSioqSioqRsa2waFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsdGRwrJSAvKiEuKSAoIx8iHR0jHh4oIx8sJyAuKSAwKyEqJR8hHB0eGRwnIh8uKSAxLCEwKyEr
        Jh8jHx0eGRwcFxsdGRwjHh4tKSAwKyErJiAbFhsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRseGhwsJyAwKiEqJR8fGh0cFxsbFhscFxsgGx0nIh8u
        KSAoIx8iHR4kIB4vKiAxLCEwKyErJh8gHB0cFxsaFRsaFRsbFhseGhwsJyAxLCEuKSAdGBwbFhsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRscGBszLiNgWjVm
        XzZRSy4jHx8bFxsaFRsaFRsfGhwoJCAyLCIvKyNKQytjWzVoYTdMyDZUTS8xLCIgGxwbFhwaFRsaFRsb
        FhwqJCFaUzFoYTddVzIkIB8cGBsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsdFx03MSZsYzt0az1dVjIjIB8cFxwaFRsaFRsaFRsaFhscGRtMRi1pYTl4cD52
        bj1gWDRAOiccGBsbFhsaFRsaFRsaFRscFxwuKSNoXzd3bz5qYzgnIyAcGBsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsbFhwzLSVnXzpyaT1eVzMrJyEeGRsa
        FRsaFRsaFRsjHx44MyZkXDd1bD51bT1nXzdCPCgfGxwaFRsaFRsaFRsaFRsaFRseGhwyLSRoYTd3bz5q
        YzgnIyAcGBsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRswKiJjWzhwaDxiWzY5MygjHR0aFRsaFRscFxw0LiRYUTNwaDt2bz1sZTlBPConIiAaFRsaFRsa
        FRsaFRsaFRsaFRshHB04MiZpYTh3bz5pYTgmIx8cFxwaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsvKSJgWTdwaDxpYjlMRS8rJiAaFRsaFRsqJSFKQy1t
        Zjp1bj1sZTpUTTAsJyEdGBsaFRsaFRsaFRsaFRsaFRsaFRskHh48NihqYzh0az5jWzchHBwbFhsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsoIyBRSzBs
        ZDpxaT1cVTUzLiMbFhscGBtBOilhWTZ1bT1zaz1eVzQ1MSUeGRsaFRsaFRsaFRsaFRsaFRsaFRsaFRss
        JyJLRC9tZjpwaDxaUzQeGRshHBwlIB4kHx4fGhwcFxwaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        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
        YztxaTtzazx0az1zazxrZDlSSy80LyQgGxwbFhsaFRsaFRsaFRsaFRsaFRsbFhorJiFHQStfWDZxaTx1
        bT1yajxsZTpnYDdmXzdtZTp2bj50az1pYTpuZjt3bz51bj1sZTpORy41MCUwKyMxKyMzLiQ3MSY9NilF
        PyxORzBWTjJeVjRkXTZmXzdpYjlvZztzaz10bTxwZzxjWzdUTTBHQSkyLSMgGxwaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRspJSBAOilVTjBgWDVqYjp1bD54cD54cD54cD54cD51bj1uZjtxaTx3bz54cD53
        bz5oYDhdVjRcVTJcVTJdVjNeVzRhWTZlXjhqYzpvZzx0az13bz54cD51bT5uZjxkXDhbVDJTTC9DPSos
        JyEdGBsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRscGBshHR03MidOSDBiWjZoYDdx
        aTx3bz53cD51bT50az10bD12bz54cD54cD53bz53bz53bz53bz52bj50bD1yaj1waDxuZjtsZTpqYzhp
        YThnXzdjWzZXUDRFPi0sKCIhGxwbFxoaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsbFhsiHB0rJiA0LyM+OSdhWTZ0az50bD1qYTphWTdjWjdpYTltZTpxaTx2bj14cD53bz1y
        ajxqYjpkXDhfWDZZUTRQSTBJQy1CPCk8Nyc4MiU4MiVDPSpKRC4/OiknIh8aFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsbFhspJSBaUzNyaj1uZzpRSjA9
        OCg7NiZAOSdIQitYUTRtZjt3bz50bD1kXTdORi4+OCc5MyU0LyQuKSIoIyAjHh4eGRwdGBwqJSJUTTBq
        YjliWjc5MyUaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsbFhssJyFfWDR1bj1rZDk/OSgfGxwaFRsaFRsiHR02MCZdVjVwaTx2bj5rYzpRSi8yLCQaFRsa
        FRsaFRsaFRsaFRsaFRscFxssKCNdVjN2bj5uZT0/OigbFhwaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsbFhstKSFjXDV4cD5qYzg8NyYcGBsaFRsaFRsbFhse
        GRtDPSphWjd1bT52bj1nYDhRSzA0LyQgGxwaFRsaFRsaFRsaFRsbFhwlISBbVDF3bz5xaT1DPCkcGBwa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsbFhssKCFj
        XDV4cD5qYzg8NyYcGBsaFRsaFRsaFRsaFRsjHx5KQyxoYTl1bT10bD1pYTlVTTE7NSclIB8aFRsaFRsa
        FRsaFRscGRtYUzB4cD51bT1FQCkdGhwaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsbFhsvKiFjXDV4cD5qYzg8NyYdGRsaFRsaFRsbFRscFhwcGRslIR5CPCls
        ZDx1bT52bz5xaDxfVzY8NSgeGB4bFRsaFRsaFhscGBxYUjB4cD51bj1GQCkeGhwaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFhsrJyBfWDV1bD5sZDlDPCoj
        Hx4aFRsaFRsmIB89NilbVDJTTC80LyVFPypgWTZxaT13bz5yajxmXzdNRi0uKSMdGRsdGBs0LiVfWDR3
        bz5waD1CPCgcGBsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsnIh9XTzNwaD1waDtVTjI0LyUhHB02MSRORy5gWTZxajtmXzdAOislIB5CPCpaUzNrZDp2
        bj12bj1pYjhbVTNUTS9PSC5bVDNtZTp1bT1oYDs8NyYbFhsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsiHB1JQy5nYDl1bj1pYTlSTC9FQCpYUjFsZTp3
        bz51bj1lXThHQC0iHh0dGRszLiVRSzBoYDdxajt2bz14cD51bT1vaDx1bD53bz5vZzxWTzQyLSMaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRscGBs1
        MCVaUzN0bD12bj11bT10bDx1bT11bj10bD1nYDlNRi4iHx4bFxoaFRsdGRsmIR88NydZUTRsZTpzazxz
        azxzaz10bD1waTxhWTYuKSMfGhwaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsbFhslIR9AOyleVzRwaDp0bDx0bDxyajxqYjpWTjFDPSovKiIbFhsa
        FRsaFRsaFRsbFhskHx42MCREPilMRi1SSzBVTjFVTjFNRy47NiYdGRsbFhsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRscFxwnIiA9OChRSy5X
        UDBXUDBUTTBKRCwyLCQgGx0aFRsaFRsaFRsaFRsaFRsaFRsaFRsbFhscGBskIB8sKCIxLCQyLCUoIyAb
        FhsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFhscGBweGxweGR0cFh0aFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFhsbFhwbFhwbFRwaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsaFRsa
        FRsaFRsaFRsaFRsaFRsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>